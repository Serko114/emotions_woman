
# ------------------------------------------------- NODES --------------------------------------------------

# -------------detection, tracking noda: VideoReader.py------------------------------------------
video_reader:
  src: video/video.mp4 #${oc.env:VIDEO_SRC} # путь до файла обработки или номер камеры (int) или ссылки на m3u8 / rtsp поток
  # skip_secs : 0  # считываем кадры раз в <skip_secs> секунд
  # roads_info: ${oc.env:ROADS_JSON} # json файл с координатами дорог на видео

# -------------detection, tracking noda: DetectionTrackingNodes.py------------------------------------------
detection_node:
  weight_pth: weights/best_cars.pt  # Путь до модели .pt или .engine (TensorRT)
  classes_to_detect: [0] #[2,3,5,7]  # весь транспорт из классов COCO
  confidence: 0.10  # Порог уверенности детектора (чем больше значение, тем меньше находит)
  iou: 0.7  # Порог NMS (чем больше значение, тем больше находит)
  imgsz: 640  # Ресайз при инференсе (640 по умолчанию)


tracking_node:  
  # Использован ByteTrack (https://github.com/ifzhang/ByteTrack)
  first_track_thresh: 0.5  # Пороговое значение для первичной инициализации трека
  second_track_thresh: 0.10  # Пороговое значение для поддержания трека
  match_thresh: 0.95  # Чем больше значение, тем больше может быть расстояние между соседними обнаруженими чтобы держать трек
  track_buffer: 125  # Время жизни трека после исчезновения из поля зрения (измеряется в числе кадров)

# -----------------------------------------------------------------------------------------------------------